/*
* ',' for "or" relationship
* chained '.' for or relationship
* ' ' for descendent ( including grandchild)
* '>' for direct child
* '+' for adjacent sibling
* '~' for sibling
*/


* {
  overflow: visible; 
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  list-style-type: none;
  font-size: 1.6vmin;
  font-weight: 250;
  color: var(--theme-white);
  user-select: none;
  font-family: Arial, Helvetica, sans-serif;
  text-decoration: none;

  /*Global Variable*/
  --bar-height: 7vmin;
  --card-width: min(12rem, 12vw);
  --card-height: min(16rem, 16vw);
  --stage-height: min(32rem, 32vw);
  --stage-width: min(90rem, 90vw);
  --library-height: 90vh;
  --library-width: min(90vw, 60rem);
  --menu-width: min(40rem, 90vw);

  --map-row: 4;
  --map-column: 5;

  --floor-unit-height: calc( var(--stage-height) / var(--map-row) );
  --floor-unit-width: calc(  var(--stage-width) / var(--map-column) );
  --shortest-floor-side: min(var(--floor-unit-height), var(--floor-unit-width) );
  --stage-object-side: min( calc(var(--shortest-floor-side) * 1.07) , 8rem );

  /*Theme related */
  --gentle-font: Arial, Helvetica, sans-serif;
  --game-font: "Arial Black", Gadget, sans-serif;
  --box-radius: max( 13px, 2%);

  --deep-white: #F9F9F9;
  --slight-white: #F3F3F3;

  --theme-orange: #F5660C;
  --theme-red: #F16A70;
  --theme-dark: #4F6D7A;
  --theme-deep-dark: #3F5D6A;
  --theme-white: #F9F9F9;
  --theme-brown: #E8DAB2;
  --theme-blue: #C0D6DF;

  --material-shadow: 0 13px 6px rgba(0,0,0,0.1), 0 9px 6px rgba(0,0,0,0.23);
}


@media only screen and (orientation: portrait){
  * {
    font-size: 1.5vmax;
    --card-width: 8.7rem;
    --card-height: 11.6rem;
    --stage-width: min(36rem, 92vw);
    --stage-height: min(100rem, 60vh);
  }

  .cardListItem:nth-child(4n) {
    page-break-after: always;
    break-after: always;
  }
}


html, body {
  overflow: hidden;
}
body {
  position: relative;
}


.game {
  /* min-width: calc(100vh * 16/9); */
  width: 100vw;
  height: 100vh;
  background-color: var(--theme-dark);
  overflow: hidden; 
}


.boxButton {
  background-color: var(--theme-red);
  border-radius: var(--box-radius);
  box-shadow: var(--material-shadow);
}
.boxButton:active{
  box-shadow: none;
  position: relative;
  top: 0.3rem;
}



.snowParticle, .laserParticle{
  z-index: 0;
  position: absolute;
}
.snowParticle {
  border-radius: 50%;
  background-color: whitesmoke;
  height: 3rem;
  width: 3rem;
}
.laserParticle{
  height: 100vh;
  width: 3rem;
  background-color: whitesmoke;
}

.stage {
  margin: 5rem 0rem 1rem 0rem;
  width: var(--stage-width);
  height: calc( var(--stage-height) + 1rem);
}


.gameMap {
  position: relative;
  height: 100%;
  width: 100%;
  z-index: 1;
  
  transform: perspective(150rem) rotateX(10deg);
  box-shadow: 0 12.5px 100px -10px rgba(245, 245, 245, 0.35), 0 10px 10px -10px rgba(245, 245, 245, 0.3);
  border-radius: 2.0rem;
  background:  linear-gradient(rgba(0,0,0,0.15),rgba(0,0,0,0.15)) 50% 100%/calc(100% - 1rem) 1rem; 
  background-repeat: no-repeat;  
  background-color: var(--deep-white);

  transition: box-shadow 0.3s ease-out;
}



.floorUnit {
  position: relative;
  z-index: 2;
  float: left; 
  border-radius: 1rem;
  height: var(--floor-unit-height);
  width: var(--floor-unit-width);
  transition: background-color 0.25s ease-out;
}



/* For Mirroring */
.mirror {
  -webkit-transform: matrix(-1, 0, 0, 1, 0, 0);
  -moz-transform: matrix(-1, 0, 0, 1, 0, 0);
  -o-transform: matrix(-1, 0, 0, 1, 0, 0);
  transform: matrix(-1, 0, 0, 1, 0, 0);
  font-weight: bold;
}



/*
************* Entity-Related-Stuff *******************
*/
.effect {
  position: absolute;
  z-index: 50;
  top: -2rem;
  left: 25%;

  width: 8rem;
  height: 8rem;
  pointer-events: none;

  transform: none;
  -moz-transform: none;
  -webkit-transform: none;
  -o-transform: none;
}


.stageObject {
  position: relative;
  top: -2rem;
  z-index: 20;

  width: var(--stage-object-side);
  height: var(--stage-object-side);
}


.stageFloatObject {
  width: 90%;
  height: 90%;
}


.stageFloatObjectShadow {
  position: relative;
  top: -1.5rem;
  z-index: -1;
  background-color: gray;
  height: 2rem;
  width: calc(var(--shortest-floor-side) / 2);
  border-radius: 50%;
  transform: translateX(-70deg);
  filter: blur(0.3rem);
  -webkit-filter: blur(0.3rem);
}



.stageImage, .stageParticle {
  width: 100%;
  height: 100%;
  object-fit: contain;
}


.stageImage {
  -webkit-filter: drop-shadow(0.2rem 0.2rem 0 white)
  drop-shadow(-0.2rem 0.2rem 0 white)
  drop-shadow(0.2rem -0.2rem 0 white)
  drop-shadow(-0.2rem -0.2rem 0 white);

  filter: drop-shadow(0.2rem 0.2rem 0 white)
  drop-shadow(-0.2rem 0.2rem 0 white)
  drop-shadow(0.2rem -0.2rem 0 white)
  drop-shadow(-0.2rem -0.2rem 0 white);
}





/*
************* Card-Related-Stuff *******************
*/
.cardSection {
  overflow: visible;
  position: absolute;
  width: 100vw;
  bottom: 0;
  
  /* Flex */
  display: flex;
  justify-content: center;
}


@media only screen and (orientation: portrait){
  .cardSection {
    bottom: calc(var(--card-height) * -1 ); 
  }
}


.deck {
  position: relative;
  white-space: nowrap;
  top: 1rem;
  z-index: 2;  
}



.cardDeckItem {
  position: absolute;
  overflow: visible;
  /* Default, dynamic*/
  top: 0; 
  left: 0;
}



.handDraw {
  overflow: visible;
  width: 100%;
  z-index: 2;
  
  display: flex;
  justify-content: center;
  flex-direction: row;
  flex-wrap: wrap;
}




.cardListItem { 
  position: relative;
  overflow: visible;
  display: inline-block;
  color: black;
  z-index: 3;
  
  transition: all 0.3s ease-out;

  /* Dynamic */
  margin: 0rem 0rem;   
  left: 0;
  top: 0;
}




.card {
  width: var(--card-width);
  height: var(--card-height);
  perspective: 100rem;
  border-radius: 0.5rem;
  overflow: visible;
  position: relative;
  cursor: grab;
  transition: transform 0.3s ease-out;
}



.cardInner {
  width: 100%;
  height: 100%;
  overflow: visible;
  position: relative;

  transition: transform 0.4s;
  transform-style: preserve-3d;
}


.cardInner.isFlipped {
  transform: rotateY(180deg);
}


.frontCard, .rearCard {
  border: solid 0.4rem white;
  box-shadow: 0rem 0 0.3rem 0 whitesmoke;

  width: 100%;
  height: 100%;
  border-radius: 0.5rem;
  position: absolute;  /* Force two card stacking */

  /* No back shown, therefore rearCard won't block frontCard when idle
  since it's initialized to be rotated by 180deg  */
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -moz-backface-visibility: hidden;

  transition: transform 0.25s ease-out,
              border 0.4s ease-out;
}



.frontCard {
  background-color: black;
}

.rearCard {
  background-color: brown; 
  transform: rotateY(180deg); 
}




/*
************* UI-Related-Stuff *******************
*/

.mainMenu {
  margin: 2rem;
  overflow: hidden;
  z-index: 1;
  background-color: var(--theme-deep-dark);
  border-radius: var(--box-radius);
  box-shadow: var(--material-shadow);

  /* Dynamic, defined in spring */
  width: var(--menu-width);
  height: 90vh;
}


.headerImage {
  height: 80%;
  width: 80%;
  object-fit: contain;
}


.mainMenuItem {
  padding: 0.8rem;
  margin: 1rem;
  width: 12rem;
  font-size: 2.2rem;
}


.mainMenuItem::after{
  display: block;
  width: 0%;
  margin-top: 0.2rem;
  border-bottom: 2px solid var(--theme-white);
  content: '';
  transition: all 300ms ease-in-out;
}

.mainMenuItem:hover::after {
  width: 10%;
}


.topSection {
  position: relative;
  top: 0.5rem;
  width: 97%;
}



.appBar li {
  float: right;
  margin: 0.5rem;
  font-size: 1.2rem;
  color: white;
}



.statusBar {
  position: absolute;
  top: 0rem;
  left: 0rem;
}



.statusParallelogram {
  width: 7rem;
	height: 2.8rem;
	transform: skew(20deg);
  background-color: transparent;
  border: solid 0.2rem var(--slight-white);
  display: inline-block;
  overflow: hidden;
}


.healthBarParallelogram {
  width: 20rem;
  height: 1.7rem;
  transform: skew(20deg);
  background-color: transparent;
  border: solid 0.15rem var(--slight-white);
  display: inline-block;
}


.healthBarFill{
  height:100%;
  width: 100%;         /*dynamic*/
  position:absolute;
  top:0;
  left:0;
  display:block;
  background-color: var(--slight-white);
 
}



.statusParallelogram * {
  transform: skew(-20deg);
  color: white;
}



.modalWindow {
  z-index: 10;
  background-color: lightblue;
  border-radius: 1rem;

  position: absolute;
  top: 4rem;
  left: 4rem;
  right: 4rem;
  bottom: 4rem;
}

.overlay {
  z-index: 9;
  background-color: rgba(20, 20, 20, 0.8);

  /* Full Screen */
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;  
}


:global(.ReactModal__Overlay) {
  opacity: 0;
  transform: translateY(-10rem);
  transition: all 300ms ease-out;
}

:global(.ReactModal__Overlay--after-open){
  transform: translateY(0);
  opacity: 1;
}

:global(.ReactModal__Overlay--before-close){
  transform: translateY(-10rem);
  opacity: 0;
}


.cardStat {
  position: relative;
  color: white;
  font-size: 1.6rem;
  z-index: 2;
}



.turnButton {
  position: relative;
  left: calc(var(--stage-width)/2 - 1rem);
  top: -5rem;
  z-index: 5;

  color: black;
  background-color: rgba(250, 250, 250, 1);
  border-radius: 50%;
  box-shadow: var(--material-shadow);

  /** dynamic */
  height: 0rem;
  width: 0rem;
}



.clickableCircle {
  height: 4rem;
  width: 4.5rem;
  background-color: rgba(240, 240, 240, 1);
  border-radius: 50%;
  animation: pulse 2s infinite;
  cursor: pointer;
}



@keyframes pulse {
	0% {
		transform: rotateX(-50deg) scale(0.95);
		box-shadow: 0 0 0 0 rgba(240, 240, 240, 0.7);
	}
	70% {
		transform: rotateX(-50deg) scale(1);
		box-shadow: 0 0 0 1rem rgba(0, 0, 0, 0);
	}
	100% {
		transform: rotateX(-50deg) scale(0.95);
		box-shadow: 0 0 0 0.5rem rgba(0, 0, 0, 0);
	}
}

.dialogBox {
  position: absolute;
  z-index: 15;
  left: -4rem;
  background-color: white;
  border-radius: 0.3rem;
}


.gameProgress, .gameProgressBar {
  display: flex;
  align-items : center;
  justify-content: center;
}


.gameProgressBar {
  position: relative;
  z-index: 1;
  height: 3rem;
  border-radius: 0.5rem;
  margin: 0.5rem;
  background-color: var(--slight-white);
  box-shadow: var(--material-shadow);
}


.gameProgressBar div{
  color: var(--theme-deep-dark);
  margin: 1rem;
  font-size: 1.5rem;
}

/*
* Library Related ------------------------------
*/

.library {
  background-color: var(--theme-deep-dark);
  box-shadow: var(--material-shadow);
  z-index: 2;
  margin: 1rem;
  padding: 1rem;
  height: var(--library-height);
  width: var(--library-width);
  overflow: auto;
  scrollbar-color: gray transparent;
  scrollbar-width: thin;
}
/* width */
.library::-webkit-scrollbar {
  width: 5px;
}
/* Track */
.library::-webkit-scrollbar-track {
  box-shadow: inset 0 0 5px grey;
  border-radius: 10px;
}
/* Handle */
.library::-webkit-scrollbar-thumb {
  background: gray;
  border-radius: 10px;
} 

.librarySelection {
  height: 4rem;
}

.selectionTab {
  cursor: pointer;
  float: left;
  margin: 0rem 0.5rem;
  font-size: 1.5rem;
  padding: 0.5rem;
}

.libraryItemSection{
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  overflow-y: auto;
}

.libraryItem::before {
  content: "";
  padding: 0.5rem 1.5rem;
  border-top: solid thin var(--theme-red);
}
.libraryItem {
  width: 25rem;
  margin: 3rem 1rem;
}

.effectInLibrary {
  position: relative;
  top: 0; 
  margin-top: 0.5rem;
  cursor: pointer;
  border: solid thin var(--theme-red);
  border-radius: 5%;
  height: 5rem;
  width: 5rem;
}