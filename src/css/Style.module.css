/*
* ',' for "or" relationship
* chained '.' for or relationship
* ' ' for descendent ( including grandchild)
* '>' for direct child
* '+' for adjacent sibling
* '~' for sibling
*/



* {
  overflow: hidden; 
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: Arial, Helvetica, sans-serif;
  font-size: 10px;
  color: white;
  background-color: black; 
}


.game {
  min-width: 72rem;
  width: 50vw;
  height: 100vh;
  background-color: white;
  position: relative;
}



.backgroundIMG {
  background-color: wheat;
  height: 48rem;
  width: 27rem;

  /* Force Middle Image*/
  top: 4rem;
  left: 0; 
  right: 0; 
  margin-left: auto; 
  margin-right: auto;
  position: absolute;

  z-index: 0;
}


.monster {
  margin: 3rem;
  height: 20rem;
  width: 40rem;
  background-color: brown;
  
  position: relative;
  z-index: 1;
}


.player {
  margin: 1rem;
  height: 10rem;
  width: 10rem;
  background-color: red;
  

  position: relative;
  z-index: 1;
}


.weapon {
  width: 2rem;
  height: 5rem;
  top: 0rem;
  background-color: lightblue;
  display: inline-block;

  /*simple animation*/
  transition: top 100ms ease-in;

  position: relative;
  z-index: 2;
}



.mirror {
  -webkit-transform: matrix(-1, 0, 0, 1, 0, 0);
  -moz-transform: matrix(-1, 0, 0, 1, 0, 0);
  -o-transform: matrix(-1, 0, 0, 1, 0, 0);
  transform: matrix(-1, 0, 0, 1, 0, 0);
  font-weight: bold;
}


.handDraw {
  
  width: 50rem;
  height: 13rem;
  top: 2rem;

  list-style-type: none;
  position: relative;
  z-index: 2;
  overflow: visible;

  background-color: greenyellow;
}



.cardListItem { 
  transition: margin 0.5s;
  transition: top 0.5s;
  transition: transform 0.5s;
  position: relative;
  
  color: black;
  display: inline-block;
  overflow: visible; 

  /* Dynamic */
  margin: 0rem 0.5rem;   
  top: 0px;
}


.cardListItem:hover {
  z-index: 4;
}


.card {
  width: 7.5rem;
  height: 10rem;
  perspective: 1000px;
  border-radius: 5px;
  overflow: visible;
  position: relative;
}


.cardInner {
  width: 100%;
  height: 100%;
  overflow: visible;
  position: relative;

  transition: transform 0.4s;
  transform-style: preserve-3d;
}


.cardInner.isFlipped {
  transform: rotateY(180deg);
}


.frontCard, .rearCard {
  border: solid 4px black;
  width: 100%;
  height: 100%;
  border-radius: 5px;
  position: absolute;  /* Force two card stacking */

  /* No back shown, therefore rearCard won't block frontCard when idle
  since it's initialized to be rotated by 180deg  */
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -moz-backface-visibility: hidden;

  transition: transform 0.3s ease-out;
}


.frontCard {
  background-color: aqua;
}

.rearCard {
  background-color: brown; 
  transform: rotateY(180deg); 
}


.frontCard.hoverableCard:hover {
  transform: scale(1.6);
  border: 1px solid yellow;
  box-shadow: 0 0 5px 1px yellow;
  
  
}



